var userResults;
var goodResults = 0;
var scoreResults = 0;

/**
 * Shuffles array in place.
 * @param {Array} a items An array containing the items.
 */
function shuffle(a) {
    var j, x, i;
    for (i = a.length - 1; i > 0; i--) {
        j = Math.floor(Math.random() * (i + 1));
        x = a[i];
        a[i] = a[j];
        a[j] = x;
    }
    return a;
}

function copyr(a){
	var reply = new Array()
	for(j = 0; j < a.length; j++)
		reply.push(a[j]);
	return reply;
}

function OnEndTimeTest(){
	$('#time').html('Fin del examen');
	$('.fixed-action-btn').hide();
	ValueExamResults()
}

function Start(){
	ControllerTime(function(){
		OnEndTimeTest();
	}, function(){
		M.toast({html: '¡El examen esta por terminar!', classes: 'rounded'});
		$('#finish-btnExam').addClass('pulse');
	});
}

function AddChartResults(incorrectas, correctas){
	var ctx = $('#chart-graph');

	var data = {
		datasets: [{
		  label:"Resultados del examen",
		  data: [incorrectas, correctas],
		  backgroundColor:[
			"rgb(255, 4, 0)",
			"rgb(0, 179, 30)"
		  ]
		}],
		labels: [
			'Incorrectas',
			'Corectas'
		]              
	};
	
	var myDoughnutChart = new Chart(ctx, {
		type: 'doughnut',
		data: data,
		options: {}
	});
}

function ValueExamResults(){
	scoreResults = goodResults = 0;
	drive.forEach(function(e, i){
		e.result.map(function(el){
			if(el.accept){
				if(userResults.get(i) === el.r){
					goodResults++;
					if(e.score){
						scoreResults+=e.score;
					}else{						
						scoreResults++;
					}		
				}
			}
		})
	});	

	$('#time').hide();

	$('#preguntas').html(new resume().loading());
	setTimeout(function(){ 
		$('#preguntas').html(new resume().render(drive.length, goodResults, drive.length - goodResults, scoreResults));
		AddChartResults(drive.length - goodResults, goodResults);
	}, 1000);	
}

function dialog(message, yesCallback, noCallback) {
    swal(message, '' ,'warning', {
		buttons: {
		  cancel: "No",
		  catch: {
			text: "Si",
			value: "catch",
		  }
		},
	}).then(function(value){
		switch (value) {	   
		  case "catch":
			yesCallback()
			break;	   
		  default:
			noCallback()
		}
	});
}


$("#finish-btnExam").on( "click", function() {
	dialog("¿Concluir el examen ahora?", function(){
		$('.fixed-action-btn').hide();
		ValueExamResults()
	}, function(){

	});
});


$("#btnStart").on( "click", function() {
	Start()
	// 'rounded' is the class I'm applying to the toast
	M.toast({html: 'Good luck, you are the best!', classes: 'rounded'});

	$("#btnStart").hide();

	$('.fixed-action-btn').show();

	$('#preguntas').html(Controler(drive));
	
	$('.materialboxed').materialbox();

	$('.modal').modal();

	userResults = new Map();

	//$('#finish-btnExam-help').tapTarget('open')
});

$(function Controller(){	
	
})